`timescale 1ns/1ps
module ALUTB ();
	reg [31:0] A,B;
	reg [2:0] opcode;
	reg sub;
	reg Cin;
	wire [31:0] F;
	wire Cout,Z,N,M;
	
	ALU dut (A,B,Cin,opcode,sub,F,Cout,Z,N,M);
	
	initial begin
	opcode = 3'b000;
	sub = 0;
	Cin = 0;
	A = 32'b00000000000000000000000000000110;
	B = 32'b00000000000000000000000000000011;//add 6 and 3
	#10
	B = 32'b11111111111111111111111111111101;//add 6 and -3
	#10
	B = 32'b11111111111111111111111111111010;//add 6 and -6
	#10
	B = 32'b11111111111111111111111111110111;//add 6 and -9
	#10
	sub = 1;
	A = 32'b00000000000000000000000000001111;
	B = 32'b00000000000000000000000000000111;//subtract 15 and 7
	#10
	A = 32'b00000000000000000000000000000101;
	B = 32'b00000000000000000000000000000110;
	opcode = 3'b001;//101 xor 110
	#10
	opcode = 3'b010;//101 and 110
	#10
	opcode = 3'b011;//101 or 110
	#10
	opcode = 3'b100;//not (101 or 110)
	#10
	A = 32'b00000000000000000000000000011000;
	B = 32'b00000000000000000000000000000011;
	opcode = 3'b101;//shift left 3
	#10
	opcode = 3'b110;//shift right 3
	end
	
	initial begin
		#500 $stop;
	end
endmodule
